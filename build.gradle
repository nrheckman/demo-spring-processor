plugins {
  id 'java'
  id 'org.springframework.boot' version "${springBootVersion}"
  id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = 'xyz.heckman.demo.spring'
version = '0.0.1'

compileJava {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-integration'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
  implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
  implementation 'org.springframework.cloud:spring-cloud-stream'
  implementation 'org.springframework.integration:spring-integration-webflux'

  // Google PubSub binder and related dependencies
  implementation 'com.google.cloud:spring-cloud-gcp-starter'
  implementation 'com.google.cloud:spring-cloud-gcp-pubsub-stream-binder'
  implementation 'io.github.lognet:grpc-spring-boot-starter'
  implementation 'io.zipkin.brave:brave-instrumentation-grpc'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
  testImplementation 'org.springframework.integration:spring-integration-test'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.assertj:assertj-core'

  testAnnotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
}

dependencyManagement {
  imports {
    mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.named('test') {
  useJUnitPlatform()
}

bootBuildImage {
  imageName = "localhost/${project.name}:${project.version}"
}
